stages:
  - build_deliver
  - build_image
  - remove_image
  - Helm_Deploy_to_k8s
 
variables:
  image: "websphere-liberty"
  deploymentName: "liberty-webapp"
  servicename: "$deploymentName-service"
  registry: "docker.registery.10.10.10.10.nip.io"
  port: "9080"
  namespace: "mynamespaces"
  helm: "liberty-app"

build_deliver:
    stage: build_deliver
    script: 
      - /opt/maven/apache-maven-3.6.3/bin/mvn clean package
      - /opt/maven/apache-maven-3.6.3/bin/mvn -Dmaven.test.failure.ignore=true clean package
      - scp webapp/target/webapp.war root@10.10.10.11:/opt/app/
      - scp Dockerfile root@10.10.10.11:/opt/app/
      - scp server.xml root@10.10.10.11:/opt/app/
    tags:
      - helm

build_image:
  stage: build_image
  script:
    - ssh root@10.10.10.11 "docker build /opt/app/. -t $registry/$image:$CI_PIPELINE_ID"
    - ssh root@10.10.10.11 "docker push $registry/$image:$CI_PIPELINE_ID"
  tags:
      - helm
      
remove_image:
  stage: remove_image
  script:
    - ssh root@10.10.10.11 "docker rmi -f $registry/$image:$CI_PIPELINE_ID"
  tags:
      - helm

Helm_Deploy_to_k8s:
  stage: Helm_Deploy_to_k8s
  script:
    - ssh -n root@10.10.10.11 "helm install $helm /opt/helm/liberty-app/. --set image.repository=$registry/$image --set image.tag=$CI_PIPELINE_ID"
  tags:
      - helm
